diff --git a/lib/slider.js b/lib/slider.js
index 24014e710df8889bd1f4732d0427438fbc6a7e06..d5388c714f4b02d379606f03db796709aa9b818a 100644
--- a/lib/slider.js
+++ b/lib/slider.js
@@ -179,6 +179,51 @@ var Slider = exports["default"] = /*#__PURE__*/function (_React$Component) {
         console.warn("variableWidth is not supported in case of rows > 1 or slidesPerRow > 1");
         settings.variableWidth = false;
       }
+      if (settings.rows > 1) {
+        var newChildren = [];
+var currentWidth = null;
+for (var i = 0; i < settings.rows; i++) {
+  var newSlide = [];
+  for (var j = i; j < children.length; j += settings.rows) {
+    if (settings.variableWidth && children[j].props.style) {
+      currentWidth = children[j].props.style.width;
+    }
+    if (j >= children.length) break;
+    newSlide.push( /*#__PURE__*/_react["default"].cloneElement(children[j], {
+      key: 100 * i + j,
+      tabIndex: -1,
+      style: {
+        width: "".concat(100 / settings.slidesPerRow, "%"),
+        display: "inline-block"
+      }
+    }));
+  }
+  if (settings.variableWidth) {
+    newChildren.push( /*#__PURE__*/_react["default"].createElement("div", {
+      key: i,
+      style: {
+        width: currentWidth
+      }
+    }, newSlide));
+  } else {
+    newChildren.push( /*#__PURE__*/_react["default"].createElement("div", {
+      key: i
+    }, newSlide));
+  }
+}
+if (settings === "unslick") {
+  var className = "regular slider " + (this.props.className || "");
+  return /*#__PURE__*/_react["default"].createElement("div", {
+    className: className
+  }, children);
+} else if (newChildren.length <= settings.slidesToShow && !settings.infinite) {
+  settings.unslick = true;
+}
+return /*#__PURE__*/_react["default"].createElement(_innerSlider.InnerSlider, _extends({
+  style: this.props.style,
+  ref: this.innerSliderRefHandler
+}, (0, _innerSliderUtils.filterSettings)(settings)), newChildren);
+      } else {
       var newChildren = [];
       var currentWidth = null;
       for (var i = 0; i < children.length; i += settings.rows * settings.slidesPerRow) {
@@ -228,6 +273,7 @@ var Slider = exports["default"] = /*#__PURE__*/function (_React$Component) {
         style: this.props.style,
         ref: this.innerSliderRefHandler
       }, (0, _innerSliderUtils.filterSettings)(settings)), newChildren);
+    }  
     }
   }]);
   return Slider;
